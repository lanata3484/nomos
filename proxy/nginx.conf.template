upstream www {
  server nomos_web:80;
}

server {
  listen 80;
  server_name ${SERVER_NAME};
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  server_name ${SERVER_NAME};
  
  # SSL
  ssl_certificate ${SSL_CERTIFICATE_FILE};
  ssl_certificate_key ${SSL_CERTIFICATE_KEY_FILE};
  
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  
  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
  chunked_transfer_encoding on;
  
  location / {
    proxy_pass                          http://www;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
  }
  
  location ~ (/services/|\.php$) {
    include fastcgi_params;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_read_timeout 300;
    fastcgi_pass nomos_core:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME /var/www/html/app/app.php; # ?service=$fastcgi_script_name;
    fastcgi_buffers 16 16k; 
    fastcgi_buffer_size 32k;
  }
  
  location = /robots.txt {
    return 200 "User-agent: *\nDisallow: /";
  }
}
